#include <iostream>
#include <stack>
using namespace std;
const int MAX = 100; 
bool visited[MAX]; 
int matrix[MAX][MAX]; 
void DFS(int n, int v) {
    stack<int> S;
    for (int i = 0; i < n; i++)
        visited[i] = false;
    S.push(v);
    while (!S.empty()) {
        int u = S.top();
        S.pop();
        if (!visited[u]) {
            visited[u] = true;
            cout << u << " ";           
            for (int w = n - 1; w >= 0; w--) {
                if (matrix[u][w] && !visited[w]) {
                    S.push(w);
                }
            }
        }
    }
}
int main() {
    int n, v;
    cin >> n;
    for (int i = 0; i < n; i++) {
        for (int j = 0; j < n; j++) {
            cin >> matrix[i][j];
        }
    }
    cin >> v;
    DFS(n,v);
    return 0;
}
