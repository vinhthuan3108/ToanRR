#include <iostream>
using namespace std;
void tinhBac(int matrix[][100], int n, bool checkDoiXung) {
    if (checkDoiXung) {
        for (int i = 0; i < n; i++) {
            int degree = 0;
            for (int j = 0; j < n; j++) {
                //degree += matrix[i][j];
                if (matrix[i][j] != 0) degree += 1;
            }
            cout << degree;
            if (i < n - 1) cout << ";";
        }
        cout << endl;
    } else {
        for (int i = 0; i < n; i++) {
            int bacVao = 0;
            for (int j = 0; j < n; j++) {
                //bacVao += matrix[i][j];
                if (matrix[i][j] != 0) bacVao += 1;
            }
            cout << bacVao;
            if (i < n - 1) cout << ";";
        }
        cout << endl;

        for (int i = 0; i < n; i++) {
            int bacRa = 0;
            for (int j = 0; j < n; j++) {
                //bacRa += matrix[j][i];
                if (matrix[j][i] != 0) bacRa += 1;
            }
            cout << bacRa;
            if (i < n - 1) cout << ";";
        }
        //cout << endl;
    }
}
bool checkDoiXung(int matrix[][100], int n) {
    for (int i = 0; i < n; i++) {
        for (int j = 0; j < n; j++) {
            if (matrix[i][j] != matrix[j][i]) {
                return false;
            }
        }
    }
    return true;
}
int main() {
    int n;
    cin >> n;
    int matrix[100][100];
    for (int i = 0; i < n; i++) {
        for (int j = 0; j < n; j++) {
            cin >> matrix[i][j];
        }
    }
    bool doiXung = checkDoiXung(matrix, n);
    tinhBac(matrix, n, doiXung);

    return 0;
}
